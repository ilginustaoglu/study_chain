<!-- Theme Switcher -->
<div class="theme-switcher">
  <span class="theme-switcher-label">Theme:</span>
  <button class="theme-toggle-button" onclick="toggleTheme()">
    <span class="theme-icon" id="themeIcon">üåô</span>
    <span id="themeText">Dark</span>
  </button>
</div>

<div class="container" style="max-width: 1200px; margin: 40px auto; padding: 20px;">
  <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px;">
    <h1 style="color: var(--text-primary); font-size: 2.5em;"><i class="fa-solid fa-repeat"></i> Flashcard Collections</h1>
    <%= link_to "‚Üê Home", homes_path, class: "btn-back", style: "text-decoration: none; background: var(--accent-primary); color: white; padding: 10px 20px; border-radius: 5px; font-weight: bold;" %>
  </div>

  <div style="margin-bottom: 30px;">
    <%= link_to "+ Create New Collection", new_flashcard_collection_path, class: "btn-add", style: "text-decoration: none; background: var(--accent-primary); color: white; padding: 15px 30px; border-radius: 8px; font-weight: bold; display: inline-block;" %>
  </div>

  <% if @collections.empty? %>
    <div style="background: var(--bg-tertiary); padding: 40px; border-radius: 10px; text-align: center;">
      <p style="font-size: 1.2em; color: var(--text-secondary);">No collections created yet. You can create a new collection using the button above.</p>
    </div>
  <% else %>
    <div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(320px, 1fr)); gap: 20px;">
      <% @collections.each do |collection| %>
        <div style="background: var(--accent-primary); border-radius: 15px; padding: 25px; color: white; box-shadow: var(--shadow-md); transition: transform 0.2s;" onmouseover="this.style.transform='translateY(-5px)'" onmouseout="this.style.transform='translateY(0)'">
          <h3 style="margin-bottom: 10px; font-size: 1.5em;"><%= collection.title %></h3>
          
          <% if collection.description.present? %>
            <p style="opacity: 0.9; margin: 10px 0; font-size: 0.95em;">
              <%= truncate(collection.description, length: 80) %>
            </p>
          <% end %>
          
          <div style="margin: 15px 0; padding: 12px; background: rgba(255,255,255,0.2); border-radius: 8px; font-weight: bold;">
            <%= collection.flashcards.count %> <%= collection.flashcards.count == 1 ? 'Card' : 'Cards' %>
          </div>
          
          <div style="display: flex; gap: 10px; margin-top: 15px;">
            <%= link_to "View Cards", flashcard_collection_path(collection), style: "flex: 1; text-align: center; background: rgba(255,255,255,0.9); color: var(--accent-primary); padding: 12px; border-radius: 8px; text-decoration: none; font-weight: bold;" %>
            <%= link_to "Edit", edit_flashcard_collection_path(collection), style: "flex: 1; text-align: center; background: rgba(255,255,255,0.2); color: white; padding: 12px; border-radius: 8px; text-decoration: none; font-weight: bold; border: 2px solid white;" %>
          </div>
          
          <%= link_to "Delete", flashcard_collection_path(collection), method: :delete, data: { confirm: "Are you sure you want to delete this collection and all its cards?" }, style: "display: block; margin-top: 10px; text-align: center; background: #C85A54; color: white; padding: 10px; border-radius: 8px; text-decoration: none; font-weight: bold;" %>
        </div>
      <% end %>
    </div>
  <% end %>
</div>

<script>
  // Theme switcher functionality
  function getTheme() {
    return localStorage.getItem('theme') || 'light';
  }

  function setTheme(theme) {
    document.documentElement.setAttribute('data-theme', theme);
    localStorage.setItem('theme', theme);
    updateThemeButton(theme);
  }

  function updateThemeButton(theme) {
    const themeIcon = document.getElementById('themeIcon');
    const themeText = document.getElementById('themeText');
    
    if (theme === 'dark') {
      themeIcon.innerHTML = '<i class="fa-solid fa-sun"></i>';
      themeText.textContent = 'Light';
    } else {
      themeIcon.innerHTML = '<i class="fa-solid fa-moon"></i>';
      themeText.textContent = 'Dark';
    }
  }

  function toggleTheme() {
    const currentTheme = getTheme();
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';
    setTheme(newTheme);
  }

  (function initTheme() {
    const savedTheme = getTheme();
    setTheme(savedTheme);
  })();

  // Floating menu control
  function toggleFloatingMenu() {
    const menu = document.getElementById('floatingMenu');
    const isVisible = menu.style.display === 'block';
    
    if (isVisible) {
      closeFloatingMenu();
    } else {
      openFloatingMenu();
    }
  }

  function openFloatingMenu() {
    const menu = document.getElementById('floatingMenu');
    const items = menu.querySelectorAll('.menu-item');
    
    menu.style.display = 'block';
    void menu.offsetWidth;
    
    setTimeout(() => {
      menu.classList.add('show');
      items.forEach(item => {
        item.classList.add('animate');
      });
    }, 10);
  }

  function closeFloatingMenu() {
    const menu = document.getElementById('floatingMenu');
    if (menu) {
      const items = menu.querySelectorAll('.menu-item');
      
      menu.classList.remove('show');
      items.forEach(item => {
        item.classList.remove('animate');
      });
      
      setTimeout(() => {
        menu.style.display = 'none';
      }, 300);
    }
  }

  // Close menu when clicking outside
  document.addEventListener('click', function(event) {
    const menu = document.getElementById('floatingMenu');
    const button = document.getElementById('floatingButton');
    
    if (menu && button && !menu.contains(event.target) && !button.contains(event.target)) {
      closeFloatingMenu();
    }
  });

  // Close menu with ESC key
  document.addEventListener('keydown', function(event) {
    if (event.key === 'Escape') {
      closeFloatingMenu();
    }
  });

  // Hover functionality for floating button
  document.addEventListener('DOMContentLoaded', function() {
    const button = document.getElementById('floatingButton');
    const menu = document.getElementById('floatingMenu');
    
    if (button && menu) {
      // Show menu on button hover
      button.addEventListener('mouseenter', function() {
        openFloatingMenu();
      });
      
      // Keep menu open when hovering over menu
      menu.addEventListener('mouseenter', function() {
        openFloatingMenu();
      });
      
      // Close menu when leaving button (if not entering menu)
      button.addEventListener('mouseleave', function() {
        setTimeout(function() {
          if (!menu.matches(':hover') && !button.matches(':hover')) {
            closeFloatingMenu();
          }
        }, 100);
      });
      
      // Close menu when leaving menu (if not entering button)
      menu.addEventListener('mouseleave', function() {
        setTimeout(function() {
          if (!menu.matches(':hover') && !button.matches(':hover')) {
            closeFloatingMenu();
          }
        }, 100);
      });
    }
  });
</script>

<!-- Floating Menu Button -->
<div id="floatingButton" onclick="toggleFloatingMenu()" class="floating-button">
  <span style="color: white; font-size: 1.5em; font-weight: bold;"><i class="fa-solid fa-bookmark"></i></span>
</div>

<!-- Floating Menu -->
<div id="floatingMenu" class="floating-menu">
  <h3 class="floating-menu-title">Study Tools</h3>
  
  <%= link_to homes_path, class: "menu-item" do %>
    <span class="menu-icon">üè†</span>
    <div class="menu-text">
      <strong>Home</strong>
      <small>Timers & Notes</small>
    </div>
  <% end %>
  
  <%= link_to study_materials_path, class: "menu-item" do %>
    <span class="menu-icon"><i class="fa-solid fa-pen-to-square"></i></span>
    <div class="menu-text">
      <strong>My Study Materials</strong>
      <small>PDF and image upload</small>
    </div>
  <% end %>
  
  <%= link_to agendas_path, class: "menu-item" do %>
    <span class="menu-icon"><i class="fa-solid fa-calendar-days"></i></span>
    <div class="menu-text">
      <strong>My Agenda</strong>
      <small>Event calendar</small>
    </div>
  <% end %>
  
  <%= link_to reminders_path, class: "menu-item" do %>
    <span class="menu-icon"><i class="fa-solid fa-stopwatch"></i></span>
    <div class="menu-text">
      <strong>Reminders</strong>
      <small>Alarms and notes</small>
    </div>
  <% end %>
</div>
