<!-- Theme Switcher -->
<div class="theme-switcher">
  <span class="theme-switcher-label">Theme:</span>
  <button class="theme-toggle-button" onclick="toggleTheme()">
    <span class="theme-icon" id="themeIcon">üåô</span>
    <span id="themeText">Dark</span>
  </button>
</div>

<div class="container" style="max-width: 1200px; margin: 40px auto; padding: 20px;">
  <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px;">
    <h1 style="color: var(--text-primary); font-size: 2.5em;">üìÖ My Agenda</h1>
    <%= link_to "‚Üê Home", homes_path, class: "btn-back", style: "text-decoration: none; background: var(--accent-primary); color: white; padding: 10px 20px; border-radius: 5px; font-weight: bold;" %>
  </div>

  <!-- Add New Event Form -->
  <div style="background: var(--accent-primary); padding: 25px; border-radius: 10px; margin-bottom: 30px; color: white;">
    <h3 style="margin-bottom: 15px;">‚ûï Add New Event</h3>
    <%= form_with model: @agenda, local: true do %>
      <div style="display: grid; grid-template-columns: 2fr 1fr; gap: 15px; margin-bottom: 15px;">
        <div>
          <%= label_tag 'agenda[title]', "Event Title *", style: "display: block; font-weight: bold; margin-bottom: 5px;" %>
          <%= text_field_tag 'agenda[title]', nil, required: true, placeholder: "e.g., Math Exam", style: "width: 100%; padding: 12px; border: none; border-radius: 5px; font-size: 1em; color: #2c3e50;" %>
        </div>
        <div>
          <%= label_tag 'agenda[event_date]', "Date and Time *", style: "display: block; font-weight: bold; margin-bottom: 5px;" %>
          <%= datetime_field_tag 'agenda[event_date]', nil, required: true, style: "width: 100%; padding: 12px; border: none; border-radius: 5px; font-size: 1em; color: #2c3e50;" %>
        </div>
      </div>
      <div style="margin-bottom: 15px;">
        <%= label_tag 'agenda[description]', "Description", style: "display: block; font-weight: bold; margin-bottom: 5px;" %>
        <%= text_area_tag 'agenda[description]', nil, rows: 2, placeholder: "Additional details...", style: "width: 100%; padding: 12px; border: none; border-radius: 5px; font-size: 1em; color: #2c3e50;" %>
      </div>
      <%= submit_tag "Add Event", style: "background: white; color: var(--accent-primary); padding: 12px 25px; border: none; border-radius: 8px; font-weight: bold; cursor: pointer; font-size: 1em;" %>
    <% end %>
  </div>

  <!-- Calendar View -->
  <div style="background: var(--bg-secondary); padding: 30px; border-radius: 10px; box-shadow: var(--shadow-md);">
    <h3 style="color: var(--text-primary); margin-bottom: 20px;">üìÜ Events</h3>
    
    <% if @agendas.empty? %>
      <p style="text-align: center; color: var(--text-secondary); padding: 30px;">No events added yet.</p>
    <% else %>
      <% grouped_agendas = @agendas.group_by { |a| a.event_date.to_date } %>
      <% grouped_agendas.each do |date, agendas| %>
        <div style="margin-bottom: 30px;">
          <h4 style="color: var(--accent-primary); background: rgba(74, 144, 226, 0.1); padding: 10px 15px; border-radius: 8px; margin-bottom: 15px;">
            <%= l(date, format: :long) %> (<%= agendas.count %> <%= agendas.count == 1 ? 'event' : 'events' %>)
          </h4>
          
          <div style="display: grid; gap: 15px; margin-left: 20px;">
            <% agendas.each do |agenda| %>
              <div style="border-left: 4px solid var(--accent-primary); background: var(--bg-tertiary); padding: 15px; border-radius: 8px; position: relative;">
                <div style="display: flex; justify-content: space-between; align-items: start;">
                  <div style="flex: 1;">
                    <div style="display: flex; align-items: center; gap: 10px; margin-bottom: 8px;">
                      <span style="background: var(--accent-primary); color: white; padding: 5px 10px; border-radius: 5px; font-size: 0.85em; font-weight: bold;">
                        <%= agenda.event_date.strftime('%H:%M') %>
                      </span>
                      <h5 style="color: var(--text-primary); margin: 0; font-size: 1.2em;"><%= agenda.title %></h5>
                    </div>
                    
                    <% if agenda.description.present? %>
                      <p style="color: var(--text-secondary); margin: 8px 0 0 0; padding-left: 5px;">
                        <%= agenda.description %>
                      </p>
                    <% end %>
                  </div>
                  
                  <div style="display: flex; gap: 8px;">
                    <%= link_to "<i class="fa-solid fa-pencil"></i>", edit_agenda_path(agenda), style: "text-decoration: none; font-size: 1.2em; padding: 5px;", title: "Edit" %>
                    <%= link_to "<i class="fa-solid fa-trash"></i>", agenda_path(agenda), method: :delete, data: { confirm: "Are you sure you want to delete this event?" }, style: "text-decoration: none; font-size: 1.2em; padding: 5px;", title: "Delete" %>
                  </div>
                </div>
              </div>
            <% end %>
          </div>
        </div>
      <% end %>
    <% end %>
  </div>
</div>

<script>
  // Theme switcher functionality
  function getTheme() {
    return localStorage.getItem('theme') || 'light';
  }

  function setTheme(theme) {
    document.documentElement.setAttribute('data-theme', theme);
    localStorage.setItem('theme', theme);
    updateThemeButton(theme);
  }

  function updateThemeButton(theme) {
    const themeIcon = document.getElementById('themeIcon');
    const themeText = document.getElementById('themeText');
    
    if (theme === 'dark') {
      themeIcon.innerHTML = '<i class="fa-solid fa-sun"></i>';
      themeText.textContent = 'Light';
    } else {
      themeIcon.innerHTML = '<i class="fa-solid fa-moon"></i>';
      themeText.textContent = 'Dark';
    }
  }

  function toggleTheme() {
    const currentTheme = getTheme();
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';
    setTheme(newTheme);
  }

  (function initTheme() {
    const savedTheme = getTheme();
    setTheme(savedTheme);
  })();

  // Floating menu control
  function toggleFloatingMenu() {
    const menu = document.getElementById('floatingMenu');
    const isVisible = menu.style.display === 'block';
    
    if (isVisible) {
      closeFloatingMenu();
    } else {
      openFloatingMenu();
    }
  }

  function openFloatingMenu() {
    const menu = document.getElementById('floatingMenu');
    const items = menu.querySelectorAll('.menu-item');
    
    menu.style.display = 'block';
    void menu.offsetWidth;
    
    setTimeout(() => {
      menu.classList.add('show');
      items.forEach(item => {
        item.classList.add('animate');
      });
    }, 10);
  }

  function closeFloatingMenu() {
    const menu = document.getElementById('floatingMenu');
    if (menu) {
      const items = menu.querySelectorAll('.menu-item');
      
      menu.classList.remove('show');
      items.forEach(item => {
        item.classList.remove('animate');
      });
      
      setTimeout(() => {
        menu.style.display = 'none';
      }, 300);
    }
  }

  // Close menu when clicking outside
  document.addEventListener('click', function(event) {
    const menu = document.getElementById('floatingMenu');
    const button = document.getElementById('floatingButton');
    
    if (menu && button && !menu.contains(event.target) && !button.contains(event.target)) {
      closeFloatingMenu();
    }
  });

  // Close menu with ESC key
  document.addEventListener('keydown', function(event) {
    if (event.key === 'Escape') {
      closeFloatingMenu();
    }
  });

  // Hover functionality for floating button
  document.addEventListener('DOMContentLoaded', function() {
    const button = document.getElementById('floatingButton');
    const menu = document.getElementById('floatingMenu');
    
    if (button && menu) {
      // Show menu on button hover
      button.addEventListener('mouseenter', function() {
        openFloatingMenu();
      });
      
      // Keep menu open when hovering over menu
      menu.addEventListener('mouseenter', function() {
        openFloatingMenu();
      });
      
      // Close menu when leaving button (if not entering menu)
      button.addEventListener('mouseleave', function() {
        setTimeout(function() {
          if (!menu.matches(':hover') && !button.matches(':hover')) {
            closeFloatingMenu();
          }
        }, 100);
      });
      
      // Close menu when leaving menu (if not entering button)
      menu.addEventListener('mouseleave', function() {
        setTimeout(function() {
          if (!menu.matches(':hover') && !button.matches(':hover')) {
            closeFloatingMenu();
          }
        }, 100);
      });
    }
  });
</script>

<!-- Floating Menu Button -->
<div id="floatingButton" onclick="toggleFloatingMenu()" class="floating-button">
  <span style="color: white; font-size: 1.5em; font-weight: bold;"><i class="fa-solid fa-bookmark"></i></span>
</div>

<!-- Floating Menu -->
<div id="floatingMenu" class="floating-menu">
  <h3 class="floating-menu-title">Study Tools</h3>
  
  <%= link_to homes_path, class: "menu-item" do %>
    <span class="menu-icon">üè†</span>
    <div class="menu-text">
      <strong>Home</strong>
      <small>Timers & Notes</small>
    </div>
  <% end %>
  
  <%= link_to study_materials_path, class: "menu-item" do %>
    <span class="menu-icon"><i class="fa-solid fa-pen-to-square"></i></span>
    <div class="menu-text">
      <strong>My Study Materials</strong>
      <small>PDF and image upload</small>
    </div>
  <% end %>
  
  <%= link_to flashcard_collections_path, class: "menu-item" do %>
    <span class="menu-icon"><i class="fa-solid fa-repeat"></i></i></span>
    <div class="menu-text">
      <strong>Flashcards</strong>
      <small>Card collections</small>
    </div>
  <% end %>
  
  <%= link_to reminders_path, class: "menu-item" do %>
    <span class="menu-icon"><i class="fa-solid fa-stopwatch"></i></span>
    <div class="menu-text">
      <strong>Reminders</strong>
      <small>Alarms and notes</small>
    </div>
  <% end %>
</div>
